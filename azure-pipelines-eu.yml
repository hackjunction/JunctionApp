# Works
trigger:
- none

pool:
  vmImage: ubuntu-latest

stages:

- stage: Build_europe
  displayName: Build stage europe
  jobs:
  - job: Build_europe
    steps:
    
    - task: DownloadSecureFile@1
      displayName: 'download EU backendend'
      inputs:
        secureFile: 'BACKEND_ENV_FILE_EU_AZURE' # string. Required. Secure File. 

    - task: CopyFiles@2
      displayName: 'copy europe backendend'
      inputs:
        SourceFolder: '$(Agent.TempDirectory)'
        Contents: BACKEND_ENV_FILE_EU_AZURE
        TargetFolder: './backend'

    - script: mv ./backend/BACKEND_ENV_FILE_EU_AZURE ./backend/.env
      displayName: 'rename europe .env'
    - task: DownloadSecureFile@1
      displayName: 'download europe frontend'
      inputs:
        secureFile: 'FRONTEND_ENV_FILE_EU' # string. Required. Secure File. 

    - task: CopyFiles@2
      displayName: 'copy europe frontend'
      inputs:
        SourceFolder: '$(Agent.TempDirectory)'
        Contents: FRONTEND_ENV_FILE_EU
        TargetFolder: './frontend'

    - script: mv ./frontend/FRONTEND_ENV_FILE_EU ./frontend/.env
      displayName: 'rename europe .env'

    - script: ls -a ./frontend
      displayName: 'ls' 

    - script: ls -Rn
      displayName: 'ls'

    - task: NodeTool@0
      inputs:
        versionSpec: '12.20.1'
      displayName: 'Install Node.js'

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          node -v
          npm -v
          npm install
          npm run build

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true
    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop_eu

  - deployment: VMDeploy_EU
    dependsOn: Build_europe
    displayName: DEPLOY EU
    environment:
      name:  PROD
      resourceType: VirtualMachine
      tags: europe
    strategy:
      runOnce:
        preDeploy:
            steps:
            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'current' 
                artifactName: drop_eu
                targetPath: '$(Pipeline.Workspace)/drop_eu'

            - script: echo initialize, cleanup, backup, install certs
        
        deploy:
          steps:
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                # Modify deployment script based on the app type
                echo "Starting deployment script run"
               

          - task: ExtractFiles@1
            inputs:
              archiveFilePatterns: '$(Pipeline.Workspace)/drop_eu/$(Build.BuildId).zip'
              destinationFolder: '$(Pipeline.Workspace)/japp' 
              cleanDestinationFolder: true 
              overwriteExistingFiles: true

          - task: DeleteFiles@1
            inputs:
              SourceFolder: '$(Pipeline.Workspace)/drop_eu' 
              Contents: '$(Build.BuildId).zip'

          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                cd /home/azureuser/azagent/_work/2/japp
                pm2 restart index
                sudo systemctl restart nginx

        routeTraffic:
          steps:
          - script: echo routing traffic
        postRouteTraffic:
          steps:
          - script: echo health check post-route traffic
        on:
          failure:
            steps:
            - script: echo Restore from backup! This is on failure
          success:
            steps:
            - script: echo Notify! This is on success